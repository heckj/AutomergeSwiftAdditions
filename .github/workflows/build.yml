name: Benchmark PRs

on:
  pull_request:
    branches: [ main ]

jobs:

  benchmark:
    runs-on: macos-13
    permissions: 
        issues: write
        pull-requests: write 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Swift Version
      run: swift -version

    - name: Homebrew Mac
      run: |
        echo "/opt/homebrew/bin:/usr/local/bin" >> $GITHUB_PATH
        brew install jemalloc

    - name: run benchmark on PR branch
      run: |
        cd MicroBenchmarks
        swift package --allow-writing-to-directory .benchmarkBaselines/ benchmark baseline update pull_request --no-progress --quiet

    - name: switch back to main branch
      run: |
        cd MicroBenchmarks
        git stash
        git checkout main

    - name: establish current main baseline
      run: |
        cd MicroBenchmarks
        swift package --allow-writing-to-directory .benchmarkBaselines/ benchmark baseline update main --no-progress --quiet

    - name: Compare PR and main
      id: benchmark
      continue-on-error: true
      run: |
        cd MicroBenchmarks
        echo $(date) >> $GITHUB_STEP_SUMMARY
        echo "exitStatus=1" >> $GITHUB_ENV
        swift package benchmark baseline check main pull_request --format markdown >> $GITHUB_STEP_SUMMARY
        echo "exitStatus=0" >> $GITHUB_ENV

    # - if: ${{ env.exitStatus == '0' }}
    #   name: Pull request comment text success
    #   id: prtestsuccess
    #   run: |
    #     cd MicroBenchmarks
    #     echo 'PRTEST<<EOF' >> $GITHUB_ENV
    #     echo "[Pull request benchmark comparison vs 'main' branch run at $(date -Iseconds)](https://github.com/heckj/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }})" >> $GITHUB_ENV
    #     echo 'EOF' >> $GITHUB_ENV

    # - if: ${{ env.exitStatus == '1' }}
    #   name: Pull request comment text failure
    #   id: prtestfailure
    #   run: |
    #     cd MicroBenchmarks
    #     echo 'PRTEST<<EOF' >> $GITHUB_ENV
    #     echo "[Pull request benchmark comparison vs 'main' branch run at $(date -Iseconds)](https://github.com/heckj/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }})" >> $GITHUB_ENV
    #     echo "_Pull request had performance regressions_" >> $GITHUB_ENV
    #     echo 'EOF' >> $GITHUB_ENV

    # - name: check env
    #   run: env

    # - name: Comment PR
    #   uses: thollander/actions-comment-pull-request@v2
    #   with:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     message: ${{ env.PRTEST }}
    #     comment_tag: execution

    # - name: Exit with correct status
    #   run: |
    #     exit ${{ env.exitStatus }}

  build:

    runs-on: macos-latest

    steps:
    - name: Checkout Project
      uses: actions/checkout@v3

    # - name: Switch to Xcode 13.4.1
    #   run: sudo xcode-select -s /Applications/Xcode_13.4.1.app

    - name: Show Build Version
      run: xcodebuild -version

    # - name: Show Build Settings
    #   run: xcodebuild -scheme SwiftViz -showBuildSettings

    # - name: Show Build SDK
    #   run: xcodebuild -scheme SwiftViz -showsdks
    # xcodebuild

    - name: build and test
      run: swift test --enable-code-coverage -v

      #- name: Xcode iOS build
      #run: xcodebuild clean build -scheme SwiftVizScale-Package -destination 'platform=iOS Simulator,OS=15.5,name=iPhone 8' -showBuildTimingSummary

        #- name: check against API breaking changes
        #  run: swift package diagnose-api-breaking-changes 0.5.0

    # - name: env review
    #   run: env

      #- name: doc utility build verification
      # run: |
      #  cd utils
      #  swift build

        #- name: Prepare Code Coverage
        # run: xcrun llvm-cov export -format="lcov" .build/debug/SwiftVizScalePackageTests.xctest/Contents/MacOS/SwiftVizScalePackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov

        # - name: Upload to CodeCov.io
        # run: bash <(curl https://codecov.io/bash)
        #env:
        #  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

